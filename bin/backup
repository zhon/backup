#!/usr/bin/env ruby

source_root = File.expand_path(File.dirname(__FILE__) + "/..")
$LOAD_PATH.unshift("#{source_root}/lib")

require 'backup'

require 'thor'

require 'threadpool'

require 'io/console'

# Find the backup drive in /Volumes
# Check diff with Media to see if you can do a --delete
# Backup to 
#

class CLI < Thor
  BACK_UP_ROOT = Backup::DriveFinder::BACK_UP_ROOT
  BACK_UP_EXT = Backup::DriveFinder::BACK_UP_EXT
  SOURCE_DIR_ROOT = "/Volumes/Media/"
  @@command = %w{rsync -av --exclude .DS_STORE }

  desc "backup", "from #{SOURCE_DIR_ROOT} to #{BACK_UP_ROOT}#{BACK_UP_EXT}"
  option 'dry-run', alias: '-d', type: :boolean, desc: "perform a trial run with no changes made"
  option :delete, desc: 'delete extraneous files from dest dirs'
  option :dest, desc: 'backup to this distination'
  def backup
    backup_disks = Backup::DriveFinder.new(options[:dest]).dirs
    cb = Backup::CommandsBuilder.new(backup_disks, options)
    #commands = Backup::CommandsBuilder.new(backup_disks, options).commands

    puts cb
    print "Continue (Y/n): "
    if STDIN.getch == 'n'
      puts
      exit 1
    end
    puts

    tp = ThreadPool.new(2)
    cb.to_procs.map { |item| tp.push item }
    tp.process
    tp.finish
  end

  default_task :backup

end


CLI.start
